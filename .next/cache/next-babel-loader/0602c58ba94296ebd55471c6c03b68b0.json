{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Component, useState } from 'react'; // react bootstrap components\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nfunction Signupform() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      validated = _useState2[0],\n      setValidated = _useState2[1];\n\n  var handleSubmit = function handleSubmit(event) {\n    var form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit\n  }, React.createElement(Form.Row, null, React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"validationCustom01\"\n  }, React.createElement(Form.Label, null, \"First name\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"First name\",\n    defaultValue: \"Mark\"\n  }), React.createElement(Form.Control.Feedback, null, \"Looks good!\")), React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"validationCustom02\"\n  }, React.createElement(Form.Label, null, \"Last name\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"Last name\",\n    defaultValue: \"Otto\"\n  }), React.createElement(Form.Control.Feedback, null, \"Looks good!\")), React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"validationCustomUsername\"\n  }, React.createElement(Form.Label, null, \"Username\"), React.createElement(InputGroup, null, React.createElement(InputGroup.Prepend, null, React.createElement(InputGroup.Text, {\n    id: \"inputGroupPrepend\"\n  }, \"@\")), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Username\",\n    \"aria-describedby\": \"inputGroupPrepend\",\n    required: true\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, \"Please choose a username.\")))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom03\"\n  }, React.createElement(Form.Label, null, \"City\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"City\",\n    required: true\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, \"Please provide a valid city.\")), React.createElement(Form.Group, {\n    as: Col,\n    md: \"3\",\n    controlId: \"validationCustom04\"\n  }, React.createElement(Form.Label, null, \"State\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"State\",\n    required: true\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, \"Please provide a valid state.\")), React.createElement(Form.Group, {\n    as: Col,\n    md: \"3\",\n    controlId: \"validationCustom05\"\n  }, React.createElement(Form.Label, null, \"Zip\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Zip\",\n    required: true\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, \"Please provide a valid zip.\"))), React.createElement(Form.Group, null, React.createElement(Form.Check, {\n    required: true,\n    label: \"Agree to terms and conditions\",\n    feedback: \"You must agree before submitting.\"\n  })), React.createElement(Button, {\n    type: \"submit\"\n  }, \"Submit form\")));\n}\n\nexport default Signupform;","map":{"version":3,"sources":["/Users/nirkumar5/Documents/2020/reactjs/howathon2020/src/components/Signupform.js"],"names":["React","Component","useState","Form","Button","Col","InputGroup","Signupform","validated","setValidated","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\n\n// react bootstrap components\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport InputGroup from 'react-bootstrap/InputGroup'\n\nfunction Signupform() {\n\n    const [validated, setValidated] = useState(false);\n          \n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n        }\n    \n        setValidated(true);\n    };\n\n        return (\n            <>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\n                    <Form.Label>First name</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        placeholder=\"First name\"\n                        defaultValue=\"Mark\"\n                    />\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n                    <Form.Label>Last name</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        placeholder=\"Last name\"\n                        defaultValue=\"Otto\"\n                    />\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\n                    <Form.Label>Username</Form.Label>\n                    <InputGroup>\n                        <InputGroup.Prepend>\n                        <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        aria-describedby=\"inputGroupPrepend\"\n                        required\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                        Please choose a username.\n                        </Form.Control.Feedback>\n                    </InputGroup>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"City\" required />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a valid city.\n                    </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\n                    <Form.Label>State</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"State\" required />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a valid state.\n                    </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\n                    <Form.Label>Zip</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Zip\" required />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a valid zip.\n                    </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Group>\n                    <Form.Check\n                    required\n                    label=\"Agree to terms and conditions\"\n                    feedback=\"You must agree before submitting.\"\n                    />\n                </Form.Group>\n                <Button type=\"submit\">Submit form</Button>\n                </Form>\n            </>\n        )\n}\n\nexport default Signupform;"]},"metadata":{},"sourceType":"module"}